language: cpp

dist: bionic

jobs:
    include:
    - compiler: clang
      env: BUILD=cmake CPP_STD=98
      addons:
        apt:
          packages:
            - libc++-dev
    - compiler: clang
      env: BUILD=cmake CPP_STD=11
      addons:
        apt:
          packages:
            - libc++-dev
    - compiler: clang
      env: BUILD=cmake CPP_STD=14
      addons:
        apt:
          packages:
            - libc++-dev
    - compiler: clang
      env: BUILD=cmake CPP_STD=17
      addons:
        apt:
          packages:
            - libc++-dev

    - compiler: gcc
      env: BUILD=cmake CPP_STD=98
    - compiler: gcc
      env: BUILD=cmake CPP_STD=11
    - compiler: gcc
      env: BUILD=cmake CPP_STD=14
    - compiler: gcc
      env: BUILD=cmake CPP_STD=17

    - compiler: gcc
      env: BUILD=autotools
      addons:
        apt:
          packages:
            - valgrind
    - compiler: clang
      env: BUILD=autotools
      addons:
        apt:
          packages:
            - libc++-dev
            - valgrind

    - compiler: gcc
      env: BUILD=cmake_coverage
    - compiler: gcc
      env: BUILD=cmake_gtest
    - env: BUILD=make_dos
      addons:
        apt:
          packages:
            - dosbox
    - compiler: clang
      os: osx
      env: BUILD=cmake CPP_STD=17
      addons:
        apt:
          packages:
            - libc++-dev
    - compiler: gcc
      os: osx
      env: BUILD=cmake CPP_STD=14

    - compiler: gcc
      os: osx
      env: BUILD=autotools
      addons:
        apt:
          packages:
            - valgrind
    - compiler: clang
      env: BUILD=autotools
      os: osx
      addons:
        apt:
          packages:
            - libc++-dev
            - valgrind
    - env: BUILD=docker_ubuntu_autotools
    - env: BUILD=docker_ubuntu_gcc10

before_script:
    - export CPPUTEST_BUILD_DIR=$TRAVIS_BUILD_DIR/cpputest_build
    - mkdir -p $CPPUTEST_BUILD_DIR && cd $CPPUTEST_BUILD_DIR

script:
    - "../scripts/travis_ci_build.sh"

after_failure:
    - "../scripts/travis_ci_after.sh"

after_success:
    - "../scripts/travis_ci_after.sh"

before_deploy:
    - "openssl aes-256-cbc -K $encrypted_8ebb1ef83f64_key -iv $encrypted_8ebb1ef83f64_iv -in github_deploy_key.enc -out github_deploy_key -d"
    - chmod 600 github_deploy_key
    - eval $(ssh-agent -s)
    - ssh-add github_deploy_key
    - git tag latest_passing_build -a -m "Generated tag from TravisCI for build $TRAVIS_BUILD_NUMBER"
    - this travis yaml is still an experiment

deploy:
    provider: releases
    # â‹®
    edge: true
    skip_cleanup: true
    on:
      tags: false

